0.	Section 0: Database Overview

CREATE SCHEMA stc;
USE stc;

1.	Section 1: Data Definition Language (DDL)

CREATE TABLE addresses (
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(100) NOT NULL);

CREATE TABLE categories (
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(10) NOT NULL);

CREATE TABLE clients (
id INT PRIMARY KEY AUTO_INCREMENT,
full_name VARCHAR(50) NOT NULL,
phone_number VARCHAR(20) NOT NULL);

CREATE TABLE drivers (
id INT PRIMARY KEY AUTO_INCREMENT,
first_name VARCHAR(30) NOT NULL,
last_name VARCHAR(30) NOT NULL,
age INT NOT NULL,
rating FLOAT DEFAULT 5.5);

CREATE TABLE cars (
id INT PRIMARY KEY AUTO_INCREMENT,
make VARCHAR(20) NOT NULL,
model VARCHAR(20),
`year` INT NOT NULL DEFAULT 0,
mileage INT DEFAULT 0,
`condition` CHAR(1) NOT NULL,
category_id INT NOT NULL, 
CONSTRAINT fk_ct_id FOREIGN KEY (category_id) REFERENCES categories(id));

CREATE TABLE courses (
id INT PRIMARY KEY AUTO_INCREMENT,
from_address_id	INT NOT NULL,
`start` DATETIME NOT NULL,
bill DECIMAL(10,2) DEFAULT 10,
car_id INT NOT NULL, 
client_id INT NOT NULL,
 CONSTRAINT fk_add_id FOREIGN KEY (from_address_id) REFERENCES addresses(id),
CONSTRAINT fk_car_id FOREIGN KEY (car_id) REFERENCES cars(id),
CONSTRAINT fk_cl_id FOREIGN KEY (client_id) REFERENCES clients(id));

CREATE TABLE cars_drivers (
car_id INT NOT NULL, 
driver_id INT NOT NULL, 
CONSTRAINT pk_car_dr PRIMARY KEY(car_id,driver_id),
CONSTRAINT fk_car1_id FOREIGN KEY (car_id) REFERENCES cars(id),
CONSTRAINT fk_dr_id FOREIGN KEY (driver_id) REFERENCES drivers(id));

2.	Section 2: Data Manipulation Language (DML)
2.1.	Insert
2.2.	Update
2.3.	Delete

3.	Section 3: Querying
3.1.	Cars
3.2.	Drivers and Cars
3.3.	Number of courses for each car
3.4. 	Regular clients
3.5.	Full information of courses

4.	Section 4: Programmability
4.1.  Find all courses by clientâ€™s phone number
4.2.	Full info for address

