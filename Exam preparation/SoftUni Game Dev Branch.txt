0.	Section 0: Database Overview

CREATE SCHEMA sgd;
USE sgd;

1.	Section 1: Data Definition Language (DDL)

CREATE TABLE addresses(
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL);

CREATE TABLE categories(
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(10) NOT NULL);

CREATE TABLE offices(
id INT PRIMARY KEY AUTO_INCREMENT,
workspace_capacity INT NOT NULL,
website VARCHAR(50),
address_id INT NOT NULL,
CONSTRAINT fk_adr FOREIGN KEY (address_id) REFERENCES addresses(id));

CREATE TABLE employees(
id INT PRIMARY KEY AUTO_INCREMENT,
first_name VARCHAR(30) NOT NULL,
last_name VARCHAR(30) NOT NULL,
age INT NOT NULL,
salary DECIMAL(10,2) NOT NULL,
job_title VARCHAR(20) NOT NULL,
happiness_level CHAR(1) NOT NULL);

CREATE TABLE teams(
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(40) NOT NULL,
office_id INT NOT NULL,
leader_id INT UNIQUE NOT NULL,
CONSTRAINT fk_off FOREIGN KEY (office_id) REFERENCES offices(id),
CONSTRAINT fk_ldr FOREIGN KEY (leader_id) REFERENCES employees(id));

CREATE TABLE games(
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50) NOT NULL UNIQUE,
`description` TEXT,
rating FLOAT NOT NULL DEFAULT 5.5,
budget DECIMAL(10,2) NOT NULL,
release_date DATE,
team_id INT NOT NULL,
CONSTRAINT fk_tm FOREIGN KEY (team_id) REFERENCES teams(id));

CREATE TABLE games_categories(
game_id INT NOT NULL,
category_id INT NOT NULL,
CONSTRAINT pk_gm_cat PRIMARY KEY (game_id,category_id),
CONSTRAINT fk_game_id FOREIGN KEY (game_id) REFERENCES games(id),
CONSTRAINT fk_cat_id FOREIGN KEY (category_id) REFERENCES categories(id));

2.	Section 2: Data Manipulation Language (DML)

2.1.	Insert

INSERT INTO games (`name`, rating, budget, team_id)
SELECT LOWER(REVERSE(SUBSTRING(t.`name`,2))),t.id,t.leader_id*1000,t.id
FROM teams as t
WHERE t.id BETWEEN 1 AND 9;

2.2.	Update

UPDATE employees AS e 
JOIN teams AS t ON e.id=t.leader_id
SET e.salary = e.salary+1000
WHERE e.salary<5000 AND e.age<40;

2.3.	Delete

DELETE g FROM games AS g
LEFT JOIN games_categories AS gc ON g.id=gc.game_id
WHERE g.release_date IS NULL AND gc.category_id IS NULL;

3.	Section 3: Querying

3.1.	Employees

SELECT first_name, last_name, age, salary, happiness_level FROM employees ORDER BY salary,id;

3.2.	Addresses of the teams

SELECT t.`name`, a.`name`, LENGTH(a.`name`) AS count_of_characters FROM teams AS t
JOIN offices AS o ON o.id = t.office_id
JOIN addresses AS a ON a.id = o.address_id
WHERE o.website IS NOT NULL
ORDER BY t.`name`, a.`name`;

3.3.	Categories info
3.4. 	Games of 2022
3.5.	Full info for games

4.	Section 4: Programmability
4.1.  Find all basic information for a game
4.2.	Update Budget of the Games

