0.	Section 0: Database Overview

CREATE SCHEMA online_store;
USE online_store;

1.	Section 1: Data Definition Language (DDL)

CREATE TABLE brands (
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(40) NOT NULL UNIQUE);

CREATE TABLE categories (
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(40) NOT NULL UNIQUE);

CREATE TABLE reviews (
id INT PRIMARY KEY AUTO_INCREMENT,
content TEXT,
rating DECIMAL(10,2) NOT NULL,
picture_url VARCHAR(80) NOT NULL,
published_at DATETIME NOT NULL);

CREATE TABLE products (
id INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(40) NOT NULL,
price DECIMAL(19,2) NOT NULL,
quantity_in_stock INT,
`description` TEXT,
brand_id INT NOT NULL,
category_id INT NOT NULL, 
review_id INT,
CONSTRAINT fk_br_id FOREIGN KEY (brand_id) REFERENCES brands(id),
CONSTRAINT fk_cat_id FOREIGN KEY (category_id) REFERENCES categories(id),
CONSTRAINT fk_rw_id FOREIGN KEY (review_id) REFERENCES reviews(id));

CREATE TABLE customers (
id INT PRIMARY KEY AUTO_INCREMENT,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
phone VARCHAR(30) NOT NULL UNIQUE,
address VARCHAR(60) NOT NULL,
discount_card BIT NOT NULL DEFAULT FALSE);

CREATE TABLE orders (
id INT PRIMARY KEY AUTO_INCREMENT,
order_datetime DATETIME NOT NULL,
customer_id INT NOT NULL,
CONSTRAINT fk_cst_id FOREIGN KEY (customer_id) REFERENCES customers(id));

CREATE TABLE orders_products (
order_id INT,
product_id INT, 
CONSTRAINT fk_order_id FOREIGN KEY (order_id) REFERENCES orders(id),
CONSTRAINT fk_product_id FOREIGN KEY (product_id) REFERENCES products(id));

2.	Section 2: Data Manipulation Language (DML)

2.1.	Insert

INSERT INTO reviews (content, picture_url, published_at, rating)
SELECT SUBSTRING(p.`description`,1,15),REVERSE(p.`name`),'2010-10-10',p.price/8
FROM products as p
WHERE p.id>=5;

2.2.	Update

UPDATE products AS p 
SET p.quantity_in_stock=p.quantity_in_stock-5
WHERE p.quantity_in_stock>=60 AND p.quantity_in_stock<=70;

2.3.	Delete

3.	Section 3: Querying
3.1.	Categories
3.2.	Quantity
3.3.	Review
3.4. 	First customers
3.5.	Best categories

4.	Section 4: Programmability
4.1.  Extract client cards count
4.2.	Reduce price

